튜플 -> 변경할 수가 없다!
튜플은 소괄호를 써도 튜플, 안써도 튜플!
5p 하나짜리 튜플을 만들고 싶으면 쉼표를 찍어야 된다!(괄호가 있든지 없든지) (중요!)
6p 전체를 지우는 것은 가능한데, 일부를 지우는 것은 안된다!
7p 가져오는 것은 가능하지만, 변경하는 건 가능하지 않다!

8p 튜플도 더하기연산자와 곱하기 연산자를 쓸 수 있다!

9p 튜플을 변경할 일이 생긴다면 리스트로 형변환 한 다음에 수정하면 된다!
13p 패킹, 언패킹 용어는 그렇게 중요하지 않다
15p 언패킹 할 때 양쪽 갯수 맞춰줘야 오류 안난다!

16p. 세트는 집합처럼 생각하면 된다!
세트는 순서 보장하지 않음! (순서가 어떻게 나오든 그런갑다~)
연산자를 사용하든 메소드를 사용하든 결과는 똑같다.
19p. 연산자는 알아두기, 메소드(아래있는함수)는 외울 필요는 없다! (그냥 한번씩만 봐두고 필요할 때 찾아쓰면 된다!)

튜플 : 변경할 수 없다~
세트 : 집합과 유사해~

:이 있으면 딕셔너리 없으면 세트

<오늘의 코드>

"""tt = ((1,2,3),(4,5,6),(7,8,9))

for i in range (3) :
    for k in range(3) :
        print(tt[i][k], end = "   ")
    print()"""

"""list1 = [1,2,2,4,4,3]
print(list1)
print("중복제거")
print(list(set(list1)))

list2 = []

for i in list1 :
    if i not in list2 :
        list2.append(i)
       
print(list2)"""
